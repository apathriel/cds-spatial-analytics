library(knitr)
library(rmdformats)
## Global options
options(max.print="75")
opts_chunk$set(echo=TRUE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=75)
# Install & load geosphere
# install.packages("geosphere")
library("geosphere")
# Create spatial data matrix
my_points <- matrix(c(10.212030, 151.215256,56.158150, -33.856159), nrow = 2)
rownames(my_points) <- c("Aarhus University", "Sydney Opera")
colnames(my_points) <- c("longitude", "latitude")
# Check the object
my_points
# Calculate a Haversine distance
distHaversine(my_points)  # result is in meters
?distHaversine()
# Calculate Meeus distance
distMeeus(my_points)
# Calculate Law of Cosines distance
distCosine(my_points)
# Calculate Law of Cosines distance
distCosine(my_points)
# Calculate a Haversine distance
distHaversine(my_points)  # result is in meters
distRhumb(my_points)
# Calculate Vincenty sphere distance
distVincentySphere(my_points)
# Calculate Vincenty ellipsoid distance
distVincentyEllipsoid(my_points)
gc_dist <- distHaversine(my_points)
rl_dist <- distRhumb(my_points)
(rl_dist-gc_dist)/gc_dist*100
# Calculate percent difference
gc_dist/1000
(rl_dist-gc_dist)/gc_dist*100
# load libraries
library(sf)
# load libraries
library(sf)
library(tidyverse)
View(my_points)
# prepare data as a simple feature
points <- data.frame(names =c("Aarhus University", "Sydney Opera"),
longitude = c(10.212030,151.215256),
latitude = c(56.158150,-33.856159))
View(points)
# create geographic simple feature
points_4326 <- points %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326)
View(points_4326)
3
# create a planimetric simple feature
points_32632 <- points %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>%
st_transform(32632)
# calculate the Euclidian distance
euc_dist <- st_distance(points[1,], points[2,])
# calculate the Euclidian distance
euc_dist <- st_distance(points_4326[1,], points_4326[2,])
euc_dist
# calculate geodetic distance
geo_dist <- st_distance(points_32632[1,],points_32632[2,])
geo_dist
# difference
euc_dist-geo_dist
(eu_dist-geo_dist)/geo_dist*100
(euc_dist-geo_dist)/geo_dist*100
library(knitr)
library(rmdformats)
## Global options
options(max.print="75")
opts_chunk$set(echo=TRUE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=75)
install.packages("Rcpp")
install.packages("fasterize")
install.packages("mapboxapi", dependencies = TRUE)
